version: 2.1

parameters:
  image-tag:
    type: string
    default: "current"

executors:
  node-executor:
    docker:
      - image: cimg/node:18.17
    working_directory: ~/project

jobs:
  test-react-functionality-knapsack:
    executor: node-executor
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            if [ ! -d "node_modules" ] || [ ! -d "node_modules/@knapsack-pro" ]; then
              echo "ðŸ”„ Installing dependencies..."
              npm ci
            else
              echo "âœ… Dependencies found in cache"
              # Verify critical dependencies are properly installed
              if [ ! -f "node_modules/emittery/index.js" ] || [ ! -f "node_modules/emittery/maps.js" ]; then
                echo "ðŸ”„ Detected corrupted dependencies, reinstalling..."
                rm -rf node_modules
                npm install
              fi
            fi
            echo "âœ… All dependencies ready!"
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run React tests with Knapsack Pro
          command: |
            mkdir -p test-results
            npx knapsack-pro-jest --runInBand
            echo "âœ… Knapsack Pro React tests completed"
          environment:
            CI: true
            KNAPSACK_PRO_TEST_FILE_PATTERN: "{src/**/*.test.js,src/**/*.spec.js}"
            JEST_JUNIT_OUTPUT_DIR: test-results
            JEST_JUNIT_OUTPUT_NAME: jest-junit.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: coverage
          destination: coverage-report

workflows:
  test:
    jobs:
      - test-react-functionality-knapsack

  
  
