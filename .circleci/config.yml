version: 2.1

# This marks it as a setup configuration for dynamic config
setup: true

# Only need the continuation orb for this approach.
orbs:
  continuation: circleci/continuation@2.0.0
  path-filtering: circleci/path-filtering@2.0.1

# Keep your parameters - they'll be passed to the generated config
parameters:
  image-tag:
    type: string
    default: "current"
  test-conditional:
    type: boolean
    default: true

executors:
  my-executor:
    docker:
      - image: cimg/base:<< pipeline.parameters.image-tag >>
    working_directory: /tmp

jobs:
     
  generate-data:
    executor: my-executor
    steps:
      - when:
          condition: << pipeline.parameters.test-conditional >>
          steps:
            - run:
                name: Test conditional
                command: echo test conditional
      - when:
          condition:
            not: << pipeline.parameters.test-conditional >>
          steps:
            - run:
                name: Create workspace files
                command: |
                  echo "JOB 1"
                  echo "========================="
                  
                  # Create workspace directory
                  mkdir -p /tmp/workspace
                  
                  # Create initial files
                  echo "This is file 1!" > /tmp/workspace/file1.txt
                  echo "This is file 2!" > /tmp/workspace/file2.txt
                  
                  echo "üìÅ Files created in this job:"
                  ls -la /tmp/workspace/

                  echo "Workspace root is /tmp/workspace"
               
            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                  - "*.txt"
            
  process-data:
    executor: my-executor
    steps:
      - when:
          condition: << pipeline.parameters.test-conditional >>
          steps:
            - run:
                name: Skip process-data job
                command: echo "test-conditional is true, skipping process-data job"
      - when:
          condition:
            not: << pipeline.parameters.test-conditional >>
          steps:
            - attach_workspace:
                at: /tmp/workspace
            - run:
                name: Process workspace files
                command: |
                  echo "Job 2"
                  echo "======================"
                  
                  echo "üìÅ Files received from previous job:"
                  ls -laR /tmp/workspace/
                  echo ""
                  
                  mkdir -p /tmp/workspace/job2
                  
                  # Process the data
                  echo "üîÑ Processing data..."
                  echo "This is file 1 from job 2" > /tmp/workspace/job2/file1job2.txt
                  echo "This is file 2 from job 2" > /tmp/workspace/job2/file2job2.txt
                  
                  
                  
                  echo "üìÅ Files after processing (This will get added to workspace):"
                  ls -laR /tmp/workspace/
                  echo ""
            
            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                  - "*.txt"
                  - "job2"
            
  publish-results:
    executor: my-executor
    steps:
      - when:
          condition: << pipeline.parameters.test-conditional >>
          steps:
            - run:
                name: Skip publish-results job
                command: echo "test-conditional is true, skipping publish-results job"
      - when:
          condition:
            not: << pipeline.parameters.test-conditional >>
          steps:
            - attach_workspace:
                at: /tmp/workspace
            - run:
                name: Show final workspace state
                command: |
                  echo "Job 2"
                  echo "======================"
                  echo "üìÅ Files received from previous job:"
                  ls -laR /tmp/workspace/
                  echo ""
            
            
  setup:
    executor: continuation/default
    steps:
      - checkout
      - run:
          name: Generate dynamic configuration
          command: |
            # Create your generate-config script
            chmod +x .circleci/generate-config.sh
            ./.circleci/generate-config.sh > generated-config.yml
      - continuation/continue:
          configuration_path: generated-config.yml

workflows:
  setup-workflow:
    jobs:
      #- setup
      - path-filtering/filter:
          base-revision: main
          mapping: |
            .*\.py run-python-tests true
          config-path: .circleci/continue-test.yml
      # workspace demonstration. When using dynamic config, you can only have 1 workflow.
      - generate-data
      - process-data:
          requires:
            - generate-data
      - publish-results:
          requires:
            - process-data
  
