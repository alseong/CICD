version: 2.1

parameters:
  run-react-tests:
    type: boolean
    default: false
  config-override:
    type: string
    default: "none"
  image-tag:
    type: string
    default: "current"
  test-conditional:
    type: boolean
    default: false

executors:
  node-executor:
    docker:
      - image: cimg/node:18.17
    working_directory: ~/project

jobs:
  debug-parameters:
    executor: node-executor
    steps:
      - run:
          name: Print pipeline parameters
          command: |
            echo "üîç run-react-tests parameter: << pipeline.parameters.run-react-tests >>"
            echo "üîç config-override parameter: << pipeline.parameters.config-override >>"
            echo "üîç image-tag parameter: << pipeline.parameters.image-tag >>"

  install-dependencies:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: |
            npm install
            echo "‚úÖ All dependencies installed!"
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  test-javascript-syntax:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Check JavaScript syntax
          command: |
            npx eslint src/ --ext .js,.jsx || echo "‚ö†Ô∏è  ESLint issues found"
            echo "‚úÖ JavaScript syntax check complete"

  test-react-build:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build React application
          command: |
            npm run build
            echo "‚úÖ React build successful"
      - store_artifacts:
          path: build
          destination: build-artifacts

  test-react-functionality:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run React tests
          command: |
            CI=true npm test -- --coverage --watchAll=false
            echo "‚úÖ React tests completed"
      - store_test_results:
          path: test-results

  lint-react-code:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Lint React code
          command: |
            npx eslint src/ --ext .js,.jsx --format junit --output-file test-results/eslint/results.xml || echo "‚ö†Ô∏è  Linting issues found"
            echo "‚úÖ Code linting complete"
      - store_test_results:
          path: test-results

workflows:
  react-test-workflow:
    when: << pipeline.parameters.run-react-tests >>
    jobs:
      - debug-parameters
      - install-dependencies
      - test-javascript-syntax:
          requires:
            - install-dependencies
      - test-react-build:
          requires:
            - install-dependencies
      - test-react-functionality:
          requires:
            - install-dependencies
      - lint-react-code:
          requires:
            - install-dependencies

  default-workflow:
    unless: << pipeline.parameters.run-react-tests >>
    jobs:
      - debug-parameters
      - install-dependencies 